name: Publish Docker image

permissions:
  contents: read
  packages: write

on:
  push:

jobs:
  publish-docker-image:
    environment:
      name: "github-registry"
      url: https://github.com/orgs/wdes/packages?repo_name=mail-autodiscover-autoconfig
    name: Publish the dev image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: make docker-build
        env:
          DOCKER_BUILDKIT: 1
          PLATFORM: linux/amd64
          IMAGE_TAG: "ghcr.io/wdes/mail-autodiscover-autoconfig/mail-autodiscover-autoconfig:latest"
          ACTION: push

  publish-binaries:
    name: Publish binaries to the draft (${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.variant }})
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: linux, arch: aarch64, variant: gnu }
          - { os: linux, arch: aarch64, variant: musl }

          - { os: linux, arch: arm, variant: gnueabi }
          - { os: linux, arch: arm, variant: gnueabihf }
          - { os: linux, arch: arm, variant: musleabi }
          - { os: linux, arch: arm, variant: musleabihf }

          - { os: linux, arch: armv5te, variant: gnueabi }
          - { os: linux, arch: armv5te, variant: musleabi }

          - { os: linux, arch: armv7, variant: gnueabi }
          - { os: linux, arch: armv7, variant: gnueabihf }
          - { os: linux, arch: armv7, variant: musleabi }
          - { os: linux, arch: armv7, variant: musleabihf }

          - { os: linux, arch: i586, variant: gnu }
          - { os: linux, arch: i586, variant: musl }

          - { os: linux, arch: i686, variant: gnu }

          - { os: linux, arch: mips, variant: gnu }
          - { os: linux, arch: mips, variant: musl }

          - { os: linux, arch: mips64, variant: gnuabi64 }
          - { os: linux, arch: mips64, variant: muslabi64 }

          - { os: linux, arch: mips64el, variant: gnuabi64 }
          - { os: linux, arch: mips64el, variant: muslabi64 }

          - { os: linux, arch: mipsel, variant: gnu }
          - { os: linux, arch: mipsel, variant: musl }

          - { os: linux, arch: powerpc, variant: gnu }
          - { os: linux, arch: powerpc64, variant: gnu }
          - { os: linux, arch: powerpc64le, variant: gnu }

          - { os: linux, arch: riscv64gc, variant: gnu }

          - { os: linux, arch: s390x, variant: gnu }

          - { os: linux, arch: sparc64, variant: gnu }

          - { os: linux, arch: x86_64, variant: gnu }
          - { os: linux, arch: x86_64, variant: musl }

    steps:
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.67.1
          override: true
          target: ${{ matrix.arch }}-unknown-${{ matrix.os }}-${{ matrix.variant }}
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --locked --target ${{ matrix.arch }}-unknown-${{ matrix.os }}-${{ matrix.variant }}

      - name: Rename file
        run: ls -lahR /project; mv /project/mail-autodiscover-autoconfig ${{ matrix.arch }}-unknown-${{ matrix.os }}-${{ matrix.variant }}

      #- name: Release
      #  uses: fnkr/github-action-ghr@ghr-options
      #  if: startsWith(github.ref, 'refs/tags/')
      #  env:
      #    GHR_COMPRESS: xz
      #    GHR_PATH: target/release/
      #    GHR_DRAFT: yes
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
